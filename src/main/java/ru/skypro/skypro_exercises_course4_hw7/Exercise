Шаг первый
Создайте таблицу report, предназначенную для хранения создаваемых отчетов.
Определите, какие столбцы будут в таблице report, самостоятельно, основываясь на описании второго шага.

Шаг второй
Реализуйте следующие REST-методы в приложении для учета сотрудников:

    * POST-запрос localhost:8080/employees/upload. Он должен принимать на вход файл JSON, содержащий список сотрудников в
        JSON-формате. Все сотрудники из загружаемого файла должны быть сохранены в базе данных.

    * POST-запрос localhost:8080/report. Он должен формировать JSON-файл со статистикой по отделам:
        название отдела,
        количество сотрудников,
        максимальная зарплата,
        минимальная зарплата,
        средняя зарплата.
        А также сохранять содержимое файла в базу данных. Метод возвращает целочисленный идентификатор сохраненного в базе
        данных файла.

    * GET-запрос localhost:8080/report/{id}. Он должен находить и возвращать созданный ранее файл в формате JSON по
    переданному уникальному идентификатору.

Критерии
В случае возникновения ошибки в ходе работы приложения необходимо возвращать 500-й статус и подробное описание причины
ошибки.В случае неверно переданного id работника необходимо возвращать 404-й статус и соответствующее описание ошибки.
Чтобы при запущенном приложении можно было пользоваться страницей http://localhost:8080/swagger-ui.html, реализуйте
спецификацию Swagger UI. Приложение должно следовать паттерну Controller-Service-Repository.
Реализуйте приложения, используя подход «сверху-вниз», то есть сначала создайте контроллер с эндпоинтами,
а потом — внутреннюю логику для каждого эндпоинта.